server.port = 8090
server.servlet.context-path=/greenfield/
management.server.port=8091
management.endpoint.health.show-details=always
#DATABASE CONNECTION

spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgres://eynrspdnchjvug:NAMB5zDQhtSuvbpVIxNGxPehZo@ec2-54-243-203-93.compute-1.amazonaws.com:5432/d12ppap26psocn
#spring.datasource.url=jdbc:postgresql://ec2-54-243-203-93.compute-1.amazonaws.com:5432/d12ppap26psocn
#spring.datasource.username=eynrspdnchjvug
#spring.datasource.password=NAMB5zDQhtSuvbpVIxNGxPehZo
#local
spring.datasource.url=jdbc:postgresql://localhost:5432/otb
spring.datasource.username=uf
spring.datasource.password=uf
# ===============================
# JPA / HIBERNATE
# ===============================

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect

# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

#Allow AUTO generated id
spring.jpa.hibernate.use-new-id-generator-mappings=false